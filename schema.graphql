# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreatePostInput {
  content: String!
  title: String!
  userId: Int!
}

type CreatePostResponse {
  data: Post
  errors: [FieldError!]
}

input CreateUsersInput {
  email: String!
  lastname: String!
  name: String!
  password: String!
  rol: UserRoles!
}

type CreateUsersResponse {
  data: User
  errors: [FieldError!]
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type FieldError {
  field: String!
  message: String!
}

type GetAllPostResponse {
  data: [Post!]!
  page: Int!
  pageSize: Int!
  totalItems: Int!
}

type GetAllUsersData {
  createdAt: DateTime!
  email: String!
  id: ID!
  lastname: String!
  name: String!
  posts: [Post!]!
  rol: UserRoles!
  updatedAt: DateTime!
}

type GetAllUsersResponse {
  data: [GetAllUsersData!]!
  page: Int!
  pageSize: Int!
  totalItems: Int!
}

type Mutation {
  createPost(input: CreatePostInput!): CreatePostResponse
  createUser(input: CreateUsersInput!): CreateUsersResponse!
  deletePost(id: Int!): Boolean!
  deleteUser(id: Float!): Boolean!
  updatePost(input: UpdatePostInput!): UpdatePostResponse
  updateUser(input: UpdateUsersInput!): UpdateUsersResponse!
}

type Post {
  content: String!
  createdAt: DateTime!
  id: ID!
  title: String!
  updatedAt: DateTime!
  userId: Int!
}

type Query {
  getAllPost(page: Int!, pageSize: Int!): GetAllPostResponse!
  getAllUsers(page: Int!, pageSize: Int!): GetAllUsersResponse!
  getPostById(id: Int!): Post
  getUserById(id: Int!): User
}

input UpdatePostInput {
  content: String!
  id: ID!
  title: String!
  userId: Int!
}

type UpdatePostResponse {
  data: Post
  errors: [FieldError!]
}

input UpdateUsersInput {
  email: String!
  id: Int!
  lastname: String!
  name: String!
}

type UpdateUsersResponse {
  data: User
  errors: [FieldError!]
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
  lastname: String!
  name: String!
  rol: UserRoles!
  updatedAt: DateTime!
}

enum UserRoles {
  ADMIN
  MODERATOR
  USER
}
